// TODO: consts
// 4 bytes for int
// 2 bytes as a temp storage for int operations (inc, dec, add, sub)
//sizeofInt = 5

nextInt: 6> ; // TODO: nextInt: sizeofInt> ;
prevInt: 6< ; // TODO: prevInt: sizeofInt< ;

incByte : + ;
decByte : - ;
incShort: ifSetup + if0 incByte  2>- endif0   ;
decShort: ifSetup   if0 decByte  2>- endif0 - ;
incTiny : ifSetup + if0 incShort 2>  endif0   ;
decTiny : ifSetup   if0 decShort 2>  endif0 - ;
incInt  : ifSetup + if0 incTiny  2>  endif0   ;
decInt  : ifSetup   if0 decTiny  2>  endif0 - ;

ifSetup:  >+>[-]2<  ;
if0    : {[>-]>[2<  ;
endif0 :      >]2<} ;

addInt: 3< [-6< incByte 6>] > [-6< incShort 6>] > [-6< incTiny 6>] > [-6< incInt 6>] prevInt ; // TODO: intended to use const `sizeofInt` in place of `6`
subInt: 3< [-6< decByte 6>] > [-6< subShort 6>] > [-6< subTiny 6>] > [-6< subInt 6>] prevInt ; // TODO: intended to use const `sizeofInt` in place of `6`
